/* Copyright (c) 2003 to 2007 SimpleData Sarl http://simpledata.ch   * All rights reserved. * * This file is part of TariffEye Software  realeased under the  * GNU Public License. Redistributions of source code and binaries  * must retain the above copyright notice; see COPYING_Tariff-Eye.txt  * *//*** $Id: DispatcherSimple.java,v 1.2 2007/04/02 17:04:23 perki Exp $*/package com.simpledata.bc.components.worksheet.dispatcher;import java.util.ArrayList;import com.simpledata.bc.components.TarifTreeVisitor;import com.simpledata.bc.components.bcoption.OptionManager;import com.simpledata.bc.components.worksheet.WorkSheetManager;import com.simpledata.bc.components.worksheet.workplace.EmptyWorkSheet;import com.simpledata.bc.datamodel.BCOption;import com.simpledata.bc.datamodel.WorkSheet;import com.simpledata.bc.datamodel.WorkSheetContainer;import com.simpledata.bc.datamodel.calculus.ComCalculus;import com.simpledata.bc.datamodel.calculus.ReducOrFixed;import com.simpledata.bc.datamodel.event.NamedEvent;import com.simpledata.bc.datamodel.money.Money;/*** This is a 'no operation' dispatcher. It is not very useful, * outside of debugging and developpement purposes*/public class DispatcherSimple extends DispatcherAbstract {	/** TITLE OF THIS WORK SHEET -- should be translated in Lang Directories **/	public final static String WORKSHEET_TITLE= "SimpleDispatcher";	/**	* constructor.. should not be called by itself. 	* use WorkSheet#createWorkSheet(Dispatcher d,Class c)	*/	public DispatcherSimple(		WorkSheetContainer parent,		String title,		String id,		String key) {		super(parent, title, id, key);	}	/**	* get the loaded WorkSheet	*/	public WorkSheet getWorkSheet() {		if (myWorkSheet == null) {			WorkSheetManager.createWorkSheet(this, EmptyWorkSheet.class, "");		}		return myWorkSheet;	}	/**	 * @see com.simpledata.bc.datamodel.WorkSheet#getAcceptedNewOptions()	 */	public Class[] getAcceptedNewOptions() {		return OptionManager.defaultsOptions();	}		/** 	 * return the type of discount this worksheet accept <BR>	 * @return one of ReducOrFixed.	 * **/	public int getAcceptedReducType() {		return ReducOrFixed.ACCEPT_REDUC_FULL;	}		/**	 * @see com.simpledata.bc.datamodel.WorkSheet#getAcceptedRemoteOptions()	 */	public Class[] getAcceptedRemoteOptions() {		// all		return 	getAcceptedNewOptions();	}		public boolean isValid() { return true ; }		/**	 * @see com.simpledata.bc.datamodel.WorkSheet#_canRemoveOption(BCOption bco)	 */	public boolean _canRemoveOption(BCOption bco) { return true; }	//------------- Commission ---------------//		/**	 * Calculate the commission taken at this point	 */	public void privateComCalc(ComCalculus cc,Money value) {		if (myWorkSheet != null) {			value.operation(cc.getCom(myWorkSheet),1);		}	}		//-------------------- end ---------------//		/** utility for Dispatchers that accepts only one WorkSheet **/	protected WorkSheet myWorkSheet= null;	/* 	 * Utility for Dispatcher that accepts only one WorkSheet	 */	public boolean setWorkSheet(WorkSheet ws, String key) {		if (!acceptsNewWorkSheet(ws.getClass(), key))			return false;		this.myWorkSheet= ws;		fireNamedEvent(NamedEvent.WORKSHEET_HIERARCHY_CHANGED);		return true;	}	/* 	 * Utility for Dispatcher that accepts only one WorkSheet	 */	public ArrayList getChildWorkSheets() {		ArrayList v= new ArrayList();		v.add(myWorkSheet);		return v;	}	/* 	 * Utility for Dispatcher that accepts only one WorkSheet	 */	public String getWorkSheetKey(WorkSheet ws) {		return "";	}	/* (non-Javadoc)	 * @see com.simpledata.bc.datamodel.WorkSheetContainer#getWorkSheetAt(java.lang.String)	 */	public WorkSheet getWorkSheetAt(String key) {		return myWorkSheet;	}		/**	 * @see com.simpledata.bc.datamodel.WorkSheet#initializeData()	 */	public void initializeData() { }		/**	 * @see com.simpledata.bc.datamodel.WorkSheet#copy(com.simpledata.bc.datamodel.WorkSheetContainer, java.lang.String)	 */	protected WorkSheet _copy(WorkSheetContainer parent, String key) {		DispatcherSimple copy = 			(DispatcherSimple) WorkSheetManager.createWorkSheet(			        parent,this.getClass(),key);		if (myWorkSheet != null) {			myWorkSheet.copy(copy,"");		}		return copy;	}	//	------------------- XML ------------------//	/** XML CONSTRUCTOR **/	public DispatcherSimple() {}	/**	 * XML	 */	public void setMyWorkSheet(WorkSheet sheet) {		myWorkSheet= sheet;	}	/**	 * XML	 */	public WorkSheet getMyWorkSheet() {		return myWorkSheet;	}		// Visitor implementation	public void visit(TarifTreeVisitor v) {		v.caseDispatcherSimple( this ); 	}}/*** $Id: DispatcherSimple.java,v 1.2 2007/04/02 17:04:23 perki Exp $* * Revision 1.35  2004/07/08 14:58:59  perki* Vectors to ArrayList** Revision 1.34  2004/05/23 12:16:22  perki* new dicos** Revision 1.33  2004/05/21 13:19:49  perki* new states** Revision 1.32  2004/05/20 17:05:30  perki* One step ahead** Revision 1.31  2004/05/20 10:36:15  perki* *** empty log message ***** Revision 1.30  2004/05/19 16:39:58  perki* *** empty log message ***** Revision 1.29  2004/05/18 15:51:26  perki* Better icons management** Revision 1.28  2004/05/18 15:11:25  perki* Better icons management** Revision 1.27  2004/04/12 17:34:52  perki* *** empty log message ***** Revision 1.26  2004/04/12 12:33:09  perki* Calculus** Revision 1.25  2004/04/12 12:30:28  perki* Calculus** Revision 1.24  2004/03/23 19:45:18  perki* New Calculus Model** Revision 1.23  2004/03/18 15:43:32  perki* new option model** Revision 1.22  2004/03/04 11:12:23  perki* copiable** Revision 1.21  2004/03/02 14:42:48  perki* breizh cola. le cola du phare ouest** Revision 1.20  2004/02/26 13:24:34  perki* new componenents** Revision 1.19  2004/02/26 08:55:03  perki* *** empty log message ***** Revision 1.18  2004/02/23 18:46:04  perki* *** empty log message ******/